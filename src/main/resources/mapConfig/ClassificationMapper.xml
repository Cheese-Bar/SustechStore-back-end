<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.SustechStore.mapper.ClassificationMapper">
    <resultMap id="BaseResultMap" type="com.example.SustechStore.pojo.Classification">
        <id column="classification_id" jdbcType="INTEGER" property="classificationId"/>
        <result column="classification_name" jdbcType="VARCHAR" property="classificationName"/>
    </resultMap>


    <select id="findGoodByCat" resultType="Map">
        select goods_id  as good_id,
               name      as good_name,
               price     as good_price,
               seller_id as seller_id

        from goods
        where classification_id = #{cat_id}
          and #{t} > upload_time
          and type = #{type}
          and goods_state = 1
        order by upload_time desc
    </select>

    <select id="findGood_icon" parameterType="int" resultType="String">
        select image_url as icon,
               goods_id  as id

        from goods_image
        where goods_id = #{id}
          and sequence = 1
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        classification_id, classification_name
    </sql>
    <select id="selectByExample" parameterType="com.example.SustechStore.pojo.ClassificationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from "classification"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from "classification"
        where classification_id = #{classificationId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from "classification"
        where classification_id = #{classificationId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.SustechStore.pojo.ClassificationExample">
        delete from "classification"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.SustechStore.pojo.Classification">
        insert into "classification" (classification_id, classification_name)
        values (#{classificationId,jdbcType=INTEGER}, #{classificationName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.SustechStore.pojo.Classification">
        insert into "classification"
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classificationId != null">
                classification_id,
            </if>
            <if test="classificationName != null">
                classification_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classificationId != null">
                #{classificationId,jdbcType=INTEGER},
            </if>
            <if test="classificationName != null">
                #{classificationName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.SustechStore.pojo.ClassificationExample"
            resultType="java.lang.Long">
        select count(*) from "classification"
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update "classification"
        <set>
            <if test="record.classificationId != null">
                classification_id = #{record.classificationId,jdbcType=INTEGER},
            </if>
            <if test="record.classificationName != null">
                classification_name = #{record.classificationName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update "classification"
        set classification_id = #{record.classificationId,jdbcType=INTEGER},
        classification_name = #{record.classificationName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.SustechStore.pojo.Classification">
        update "classification"
        <set>
            <if test="classificationName != null">
                classification_name = #{classificationName,jdbcType=VARCHAR},
            </if>
        </set>
        where classification_id = #{classificationId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.SustechStore.pojo.Classification">
        update "classification"
        set classification_name = #{classificationName,jdbcType=VARCHAR}
        where classification_id = #{classificationId,jdbcType=INTEGER}
    </update>
</mapper>